user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log notice;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    keepalive_timeout   65;
    types_hash_max_size 4096;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    include /etc/nginx/conf.d/*.conf;

    server {
        listen       80;
        listen       [::]:80;
        server_name  www.lambdathunder.xyz lambdathunder.xyz www.xn--2j1b9ht5iqrp.xyz xn--2j1b9ht5iqrp.xyz;
        root         /usr/share/nginx/html;

        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;
        location / {
            proxy_pass http://10.0.128.149:8000;  # Django 애플리케이션의 주소로 변경
            # 추가적인 프록시 설정들도 가능합니다.
        }
        error_page 404 /404.html;
        location = /404.html {
        }

        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
        }
    }
    server {
        listen 443 ssl;
        listen [::]:443 ssl;
        server_name www.lambdathunder.xyz lambdathunder.xyz www.xn--2j1b9ht5iqrp.xyz xn--2j1b9ht5iqrp.xyz;

        ssl_certificate /etc/letsencrypt/live/www.xn--2j1b9ht5iqrp.xyz/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/www.xn--2j1b9ht5iqrp.xyz/privkey.pem;
        ssl_trusted_certificate /etc/letsencrypt/live/www.xn--2j1b9ht5iqrp.xyz/chain.pem;

        location / {
            proxy_pass http://10.0.128.149:8000;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
        }
            # WebSocket 설정 추가
        location /socket.io {
            proxy_pass http://10.0.128.149:8010;

            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
    }

    server {
        listen       8000;
        listen       [::]:8000;
        server_name  _;

        location / {
            proxy_pass http://10.0.128.149:8010;
            proxy_http_version                   1.1;
            proxy_set_header                     Upgrade $http_upgrade;
            proxy_set_header                     Connection "Upgrade";
            proxy_set_header                     Host $host;
        }
    }

}